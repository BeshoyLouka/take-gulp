{
  "name": "vinyl",
  "description": "A virtual file format",
  "version": "0.2.2",
  "homepage": "http://github.com/wearefractal/vinyl",
  "repository": {
    "type": "git",
    "url": "git://github.com/wearefractal/vinyl.git"
  },
  "author": {
    "name": "Fractal",
    "email": "contact@wearefractal.com",
    "url": "http://wearefractal.com/"
  },
  "main": "./index.js",
  "dependencies": {
    "clone-stats": "0.0.0"
  },
  "devDependencies": {
    "mocha": "*",
    "should": "*",
    "event-stream": "~3.0.20"
  },
  "scripts": {
    "test": "mocha --reporter spec"
  },
  "engines": {
    "node": ">= 0.9.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/wearefractal/vinyl/raw/master/LICENSE"
    }
  ],
  "readme": "[![Build Status](https://travis-ci.org/wearefractal/vinyl.png?branch=master)](https://travis-ci.org/wearefractal/vinyl)\n\n[![NPM version](https://badge.fury.io/js/vinyl.png)](http://badge.fury.io/js/vinyl)\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>vinyl</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>A virtual file format</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.9</td>\n</tr>\n</table>\n\n## File\n\n```javascript\nvar File = require('vinyl');\n\nvar coffeeFile = new File({\n  cwd: \"/\",\n  base: \"/test/\",\n  path: \"/test/file.coffee\"\n  contents: new Buffer(\"test = 123\")\n});\n```\n\n### constructor(options)\n\n#### options.cwd\n\nType: `String`  \nDefault: `process.cwd()`\n\n#### options.base\n\nUsed for relative pathing. Typically where a glob starts.\n\nType: `String`  \nDefault: `options.cwd`\n\n#### options.path\n\nFull path to the file.\n\nType: `String`  \nDefault: `null`\n\n#### options.stat\n\nThe result of an fs.stat call. See [fs.Stats](http://nodejs.org/api/fs.html#fs_class_fs_stats) for more information.\n\nType: `fs.Stats`  \nDefault: `null`\n\n#### options.contents\n\nFile contents.\n\nType: `Buffer, Stream, or null`  \nDefault: `null`\n\n### isBuffer()\n\nReturns true if file.contents is a Buffer.\n\n### isStream()\n\nReturns true if file.contents is a Stream.\n\n### isNull()\n\nReturns true if file.contents is null.\n\n### clone()\n\nReturns a new File object with all attributes cloned.\n\n### pipe(stream[, opt])\n\nIf file.contents is a Buffer, it will write it to the stream.\n\nIf file.contents is a Stream, it will pipe it to the stream.\n\nIf file.contents is null, it will do nothing.\n\nIf opt.end is true, the destination stream will not be ended (same as node core).\n\nReturns the stream.\n\n### inspect()\n\nReturns a pretty String interpretation of the File. Useful for console.log.\n\n### relative\n\nReturns path.relative for the file base and file path.\n\nExample:\n\n```javascript\nvar file = new File({\n  cwd: \"/\",\n  base: \"/test/\",\n  path: \"/test/file.coffee\"\n});\n\nconsole.log(file.relative); // file.coffee\n```\n\n\n## LICENSE\n\n(MIT License)\n\nCopyright (c) 2013 Fractal <contact@wearefractal.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/wearefractal/vinyl/issues"
  },
  "_id": "vinyl@0.2.2",
  "_from": "vinyl@~0.2.1"
}
